import logging

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup

from bot import permissions
from bot.messages import BotMessages, BotButtons
from bot import bot_main

router = Router()


# TODO: —Å–¥–µ–ª–∞—Ç—å inline-–∫–Ω–æ–ø–∫—É —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º renew_subscription –∫ —Å–æ–æ–±—â–µ–Ω–∏—é, –µ—Å–ª–∏ —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è
@router.message(F.text == BotButtons.DAYS_TO_EXPIRE)
@permissions.is_sub
async def days_to_expire(message: Message):
    tg_user_id = message.from_user.id
    days = bot_main.db.get_sub_days(tg_user_id)
    if days > 0:
        await message.reply(f"{message.from_user.first_name}, –æ–ø–ª–∞—Ç–∞ —Ç–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ {days} –¥–Ω–µ–π")
    elif days == -1:
        await message.reply(f"–ü–æ—Ö–æ–∂–µ, —Ç–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞ (–ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –ø–æ–∫–∞ —á—Ç–æ...)")
    else:
        await message.reply(f"{message.from_user.first_name}, –¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–∞ ü•∫")


@router.message(F.text == BotButtons.RENEW_SUBSCRIPTION)
@permissions.is_sub
async def renew_subscription(message: Message):
    await message.reply(f"–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ :(")


async def send_subscription_remind_message(db):
    expired_subs = bot_main.db.get_expired_subs()

    # TODO: Inline-–∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã
    for tg_id, days_to_expire in expired_subs:
        if days_to_expire == 0:
            await bot_main.bot.send_message(text=f"–¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å.", chat_id=tg_id)
            continue
        await bot_main.bot.send_message(
            text=f"–¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ {days_to_expire} –¥–Ω–µ–π. –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ–¥–ª–∏—Ç—å.",
            chat_id=tg_id
        )

