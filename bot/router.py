import logging

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup

import config
from dbcontroller import DBcontroller
from messages import BotMessages, BotButtons

main_router = Router()
db = DBcontroller(config.dbfile)
db.init()

@main_router.message(Command("start"))
async def cmd_start(message: Message):
    logging.info(f'User {message.from_user.username}:{message.from_user.id} start chat')

    unsub_buttons = [
        [KeyboardButton(text=BotButtons.INFO)],
        [KeyboardButton(text=BotButtons.TARIFF)]
    ]
    kb = unsub_buttons

    subs = db.get_sub_ids()
    if (message.from_user.id,) in subs:
        sub_buttons = [
            [KeyboardButton(text=BotButtons.DAYS_TO_EXPIRE)],
            [KeyboardButton(text=BotButtons.RENEW_SUBSCRIPTION)]
        ]
        kb.extend(sub_buttons)

    owners = db.get_owner_ids()
    if (message.from_user.id,) in owners:
        kb = [
            [KeyboardButton(text=BotButtons.STATS_FOR_OWNER)],
            [KeyboardButton(text=BotButtons.GET_SUB_INFO)],
            [KeyboardButton(text=BotButtons.ADD_SUB)],
            [KeyboardButton(text=BotButtons.DEL_SUB)]
        ]

    keyboard = ReplyKeyboardMarkup(keyboard=kb,
                                   resize_keyboard=True,
                                   input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.'
                                   )
    await message.answer("–ü—Ä–∏–≤–µ—Çüëã. –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π", reply_markup=keyboard)


# --- Ubsub and Sub messages ---
@main_router.message(F.text == BotButtons.INFO)
async def get_info(message: Message):
    await message.reply(f"–¢–µ–∫—Å—Ç —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ VIP-–∫–∞–Ω–∞–ª–µ.")


@main_router.message(F.text == BotButtons.TARIFF)
async def get_tariff(message: Message):
    await message.reply(f"–¢–µ–∫—Å—Ç —Å —Ü–µ–Ω–∞–º–∏ –∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏ –∫ –æ–ø–ª–∞—Ç–µ")


# TODO: —Å–¥–µ–ª–∞—Ç—å inline-–∫–Ω–æ–ø–∫—É —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º renew_subscription –∫ —Å–æ–æ–±—â–µ–Ω–∏—é, –µ—Å–ª–∏ —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è
# --- Subscriber messages ---
@main_router.message(F.text == BotButtons.DAYS_TO_EXPIRE)
async def days_to_expire(message: Message):
    subname = ''
    days = db.get_sub_days(subname)
    if days > 0:
        await message.reply(f"ID: {message.from_user.id} –û–ø–ª–∞—Ç–∞ —Ç–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ {days} –¥–Ω–µ–π")
    else:
        await message.reply(f"ID: {message.from_user.id} –¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–∞ ü•∫")


@main_router.message(F.text == BotButtons.RENEW_SUBSCRIPTION)
async def renew_subscription(message: Message):
    await message.reply(f"–û–ø–ª–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ :(")


# --- Owner messages ---
@main_router.message(F.text == BotButtons.STATS_FOR_OWNER)
async def get_owner_stats(message: Message):
    await message.reply(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç")


@main_router.message(F.text == BotButtons.GET_SUB_INFO)
async def get_sub_info(message: Message):
    await message.reply(f"–ü–æ–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–µ")


@main_router.message(F.text == BotButtons.ADD_SUB)
async def add_sub(message: Message):
    await message.reply(f"–ü–æ–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –≤ —Å–∏—Å—Ç–µ–º—É")


@main_router.message(F.text == BotButtons.DEL_SUB)
async def delete_sub(message: Message):
    await message.reply(f"–ü–æ–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã")
