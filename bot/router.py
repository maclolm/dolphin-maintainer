from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup

from bot.bot import db

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    unsub_buttons = [
        [KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")],
        [KeyboardButton(text="–¶–µ–Ω—ã –∏ —Ç–∞—Ä–∏—Ñ—ã")]
    ]
    kb = unsub_buttons

    subs = db.get_subs()
    if message.from_user.id in subs:
        sub_buttons = [
            [KeyboardButton(text="–î–Ω–µ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏")],
            [KeyboardButton(text="–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")]
        ]
        kb.extend(sub_buttons)

    owners = db.get_owners()
    if message.from_user.id in owners:
        kb = [
            [KeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å—á–∏–∫–µ")],
            [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞")],
            [KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞")]
        ]

    keyboard = ReplyKeyboardMarkup(keyboard=kb,
                                   resize_keyboard=True,
                                   input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.'
                                   )
    await message.answer("–ü—Ä–∏–≤–µ—Çüëã. –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π", reply_markup=keyboard)


# --- Ubsub and Sub messages ---
@router.message(F.text.lower() == "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def days_to_expire(message: Message):
    await message.reply(f"–¢–µ–∫—Å—Ç —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ VIP-–∫–∞–Ω–∞–ª–µ.")


@router.message(F.text.lower() == "—Ü–µ–Ω—ã –∏ —Ç–∞—Ä–∏—Ñ—ã")
async def days_to_expire(message: Message):
    await message.reply(f"–¢–µ–∫—Å—Ç —Å —Ü–µ–Ω–∞–º–∏ –∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏ –∫ –æ–ø–ª–∞—Ç–µ")


# TODO: —Å–¥–µ–ª–∞—Ç—å inline-–∫–Ω–æ–ø–∫—É —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º renew_subscription –∫ —Å–æ–æ–±—â–µ–Ω–∏—é, –µ—Å–ª–∏ —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è
# --- Subscriber messages ---
@router.message(F.text.lower() == "–¥–Ω–µ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏")
async def days_to_expire(message: Message):
    subname = ''
    days = db.get_sub_days(subname)
    if days > 0:
        await message.reply(f"ID: {message.from_user.id} –û–ø–ª–∞—Ç–∞ —Ç–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ {days} –¥–Ω–µ–π")
    else:
        await message.reply(f"ID: {message.from_user.id} –¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–∞ ü•∫")


@router.message(F.text.lower() == "–ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")
async def renew_subscription(message: Message):
    pass


# --- Owner messages ---
@router.message(F.text.lower() == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def days_to_expire(message: Message):
    await message.reply(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç")


@router.message(F.text.lower() == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å—á–∏–∫–µ")
async def days_to_expire(message: Message):
    await message.reply(f"–ü–æ–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–µ")


@router.message(F.text.lower() == "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞")
async def days_to_expire(message: Message):
    await message.reply(f"–ü–æ–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –≤ —Å–∏—Å—Ç–µ–º—É")


@router.message(F.text.lower() == "–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞")
async def days_to_expire(message: Message):
    await message.reply(f"–ü–æ–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã")
